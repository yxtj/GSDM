// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mtype.proto

#ifndef PROTOBUF_mtype_2eproto__INCLUDED
#define PROTOBUF_mtype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mtype_2eproto();
void protobuf_AssignDesc_mtype_2eproto();
void protobuf_ShutdownFile_mtype_2eproto();


enum MessageTypes {
  MTYPE_KERNEL_RUN = 1,
  MTYPE_KERNEL_DONE = 2,
  MTYPE_REPLY = 3,
  MTYPE_MOTIF_COUNT = 4,
  MTYPE_MOTIF_COUNT_POS = 5,
  MTYPE_MOTIF_COUNT_NEG = 6
};
bool MessageTypes_IsValid(int value);
const MessageTypes MessageTypes_MIN = MTYPE_KERNEL_RUN;
const MessageTypes MessageTypes_MAX = MTYPE_MOTIF_COUNT_NEG;
const int MessageTypes_ARRAYSIZE = MessageTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTypes_descriptor();
inline const ::std::string& MessageTypes_Name(MessageTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTypes_descriptor(), value);
}
inline bool MessageTypes_Parse(
    const ::std::string& name, MessageTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTypes>(
    MessageTypes_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageTypes>() {
  return ::MessageTypes_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mtype_2eproto__INCLUDED
